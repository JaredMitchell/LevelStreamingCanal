#ifndef __CANAL_SCRIPT__
#define __CANAL_SCRIPT__

void triggerDebug()
{
	sys.print("yup");
}

void waterLerp(vector Lock1EndPoint, vector Lock2EndPoint, float duration)
{
	vector Lock1StartPoint = $lock1Water.getWorldOrigin();
	vector Lock2StartPoint = $lock2Water.getWorldOrigin();
	float currentTime = 0;

	vector newPos;
	float lock1Diff = Lock1EndPoint_z - Lock1StartPoint_z;
	float lock2Diff = Lock2EndPoint_z - Lock2StartPoint_z;

	while(currentTime < duration)
	{
		currentTime += sys.getFrameTime();
		
		newPos = Lock1StartPoint;
		newPos_z = (currentTime / duration) * lock1Diff + Lock1StartPoint_z;

		$lock1Water.setWorldOrigin(newPos);

		newPos = Lock2StartPoint;
		newPos_z = (currentTime / duration) * lock2Diff + Lock2StartPoint_z;

		$lock2Water.setWorldOrigin(newPos);

		sys.wait(sys.getFrameTime());
	}
}

void canalLogic()
{
	//lock1 fills, lock2 drains
	thread waterLerp('0 3968 288', '2688 3968 -96', 10); //was 40
	sys.wait(10);

	$lock1North.activate($player1);
	$lock1South.activate($player1);
	sys.wait(20);

	$ship_move_point.startSpline($func_splinemover_2);
	sys.wait(10); //was 120

	$lock1North.activate($player1);
	$lock1South.activate($player1);
	sys.wait(20);

	//lock1 drains, lock2 fills
	thread waterLerp('0 3968 96', '2688 3968 96', 10); //was 120
	$ship_move_point.disableSplineAngles();
	$ship_move_point.startSpline($func_splinemover_3);
	sys.wait(10); //was 120

	$lock2North.activate($player1);
	$lock2South.activate($player1);
	sys.wait(20);

	$ship_move_point.startSpline($func_splinemover_4);
	sys.wait(10); //was 120

	$lock2North.activate($player1);
	$lock2South.activate($player1);
	sys.wait(20);

	//lock1 fills, lock2 drains
	thread waterLerp('0 3968 288', '2688 3968 -96', 10); //was 120
	$ship_move_point.disableSplineAngles();
	$ship_move_point.startSpline($func_splinemover_5);
	sys.wait(10); //was 120

	$lock3North.activate($player1);
	$lock3South.activate($player1);
	sys.wait(20);

	$ship_move_point.startSpline($func_splinemover_6);
	sys.wait(10); //was 120

	//$setObjectiveFailEntity.activate($player1);
}

void main()
{
	sys.print("canal main()\n");
	$ship_move_point.time(10); //was 120
	$ship_move_point.accelTime(3);
	$ship_move_point.decelTime(3);

	sys.waitFrame();

	sys.print($player1.getName() + "\n");
}

void canalStartLogic()
{
	sys.print("canalStartLogic\n");

	//reveal objective(s)

	canalLogic();
}

void captainTeleportReplica()
{
	$player1.setOrigin($captainTeleportReplicaPoint.getWorldOrigin());
}

void captainTeleportWorld()
{
	$player1.setOrigin($captainTeleportWorldPoint.getWorldOrigin());
}

void sternTeleportReplica()
{
	$player1.setOrigin($sternTeleportReplicaPoint.getWorldOrigin());
}

void sternTeleportWorld()
{
	$player1.setOrigin($sternTeleportWorldPoint.getWorldOrigin());
}

void starboardTeleportReplica()
{
	$player1.setOrigin($starboardTeleportReplicaPoint.getWorldOrigin());
}

void starboardTeleportWorld()
{
	$player1.setOrigin($starboardTeleportWorldPoint.getWorldOrigin());
}

void portTeleportReplica()
{
	$player1.setOrigin($portTeleportReplicaPoint.getWorldOrigin());
}

void portTeleportWorld()
{
	$player1.setOrigin($portTeleportWorldPoint.getWorldOrigin());
}

void use_gear()
{
	sys.print("use_gear\n");

	entity curr_item = $player1.getCurInvItemEntity();
    if ($player1.getCurInvItemName() == $gear_jammable_1.getKey("item_name"))
		{
			$player1.changeInvItemCount(curr_item.getKey("inv_name"), curr_item.getKey("inv_category"), -1); //Removes item count by one.
			sys.wait( 1 );
		}
}

#endif